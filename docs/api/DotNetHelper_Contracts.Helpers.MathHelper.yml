### YamlMime:ManagedReference
items:
- uid: DotNetHelper_Contracts.Helpers.MathHelper
  commentId: T:DotNetHelper_Contracts.Helpers.MathHelper
  id: MathHelper
  parent: DotNetHelper_Contracts.Helpers
  children:
  - DotNetHelper_Contracts.Helpers.MathHelper.Divide(System.Int32,System.Int32)
  - DotNetHelper_Contracts.Helpers.MathHelper.FindPercentage(System.Double,System.Double)
  - DotNetHelper_Contracts.Helpers.MathHelper.GetPercentage(System.Int32,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: MathHelper
  nameWithType: MathHelper
  fullName: DotNetHelper_Contracts.Helpers.MathHelper
  type: Class
  source:
    id: MathHelper
    path: ''
    startLine: 3455
  assemblies:
  - cs.temp.dll
  namespace: DotNetHelper_Contracts.Helpers
  syntax:
    content: public static class MathHelper
    content.vb: Public Module MathHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: DotNetHelper_Contracts.Helpers.MathHelper.GetPercentage(System.Int32,System.Int32,System.Int32)
  commentId: M:DotNetHelper_Contracts.Helpers.MathHelper.GetPercentage(System.Int32,System.Int32,System.Int32)
  id: GetPercentage(System.Int32,System.Int32,System.Int32)
  parent: DotNetHelper_Contracts.Helpers.MathHelper
  langs:
  - csharp
  - vb
  name: GetPercentage(Int32, Int32, Int32)
  nameWithType: MathHelper.GetPercentage(Int32, Int32, Int32)
  fullName: DotNetHelper_Contracts.Helpers.MathHelper.GetPercentage(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: GetPercentage
    path: ''
    startLine: 3457
  assemblies:
  - cs.temp.dll
  namespace: DotNetHelper_Contracts.Helpers
  syntax:
    content: public static string GetPercentage(int value, int total, int decimalPlaces)
    parameters:
    - id: value
      type: System.Int32
    - id: total
      type: System.Int32
    - id: decimalPlaces
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Shared Function GetPercentage(value As Integer, total As Integer, decimalPlaces As Integer) As String
  overload: DotNetHelper_Contracts.Helpers.MathHelper.GetPercentage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DotNetHelper_Contracts.Helpers.MathHelper.FindPercentage(System.Double,System.Double)
  commentId: M:DotNetHelper_Contracts.Helpers.MathHelper.FindPercentage(System.Double,System.Double)
  id: FindPercentage(System.Double,System.Double)
  parent: DotNetHelper_Contracts.Helpers.MathHelper
  langs:
  - csharp
  - vb
  name: FindPercentage(Double, Double)
  nameWithType: MathHelper.FindPercentage(Double, Double)
  fullName: DotNetHelper_Contracts.Helpers.MathHelper.FindPercentage(System.Double, System.Double)
  type: Method
  source:
    id: FindPercentage
    path: ''
    startLine: 3486
  assemblies:
  - cs.temp.dll
  namespace: DotNetHelper_Contracts.Helpers
  syntax:
    content: public static double FindPercentage(double value, double percent)
    parameters:
    - id: value
      type: System.Double
    - id: percent
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function FindPercentage(value As Double, percent As Double) As Double
  overload: DotNetHelper_Contracts.Helpers.MathHelper.FindPercentage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DotNetHelper_Contracts.Helpers.MathHelper.Divide(System.Int32,System.Int32)
  commentId: M:DotNetHelper_Contracts.Helpers.MathHelper.Divide(System.Int32,System.Int32)
  id: Divide(System.Int32,System.Int32)
  parent: DotNetHelper_Contracts.Helpers.MathHelper
  langs:
  - csharp
  - vb
  name: Divide(Int32, Int32)
  nameWithType: MathHelper.Divide(Int32, Int32)
  fullName: DotNetHelper_Contracts.Helpers.MathHelper.Divide(System.Int32, System.Int32)
  type: Method
  source:
    id: Divide
    path: ''
    startLine: 3500
  assemblies:
  - cs.temp.dll
  namespace: DotNetHelper_Contracts.Helpers
  summary: "\n\n"
  example: []
  syntax:
    content: public static Tuple<int, int> Divide(int dividend, int divisor)
    parameters:
    - id: dividend
      type: System.Int32
      description: a number to be divided by another number.
    - id: divisor
      type: System.Int32
      description: a number that divides into another without a remainder.
    return:
      type: System.Tuple{System.Int32,System.Int32}
      description: Result,Remainder
    content.vb: Public Shared Function Divide(dividend As Integer, divisor As Integer) As Tuple(Of Integer, Integer)
  overload: DotNetHelper_Contracts.Helpers.MathHelper.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: DotNetHelper_Contracts.Helpers
  commentId: N:DotNetHelper_Contracts.Helpers
  name: DotNetHelper_Contracts.Helpers
  nameWithType: DotNetHelper_Contracts.Helpers
  fullName: DotNetHelper_Contracts.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetHelper_Contracts.Helpers.MathHelper.GetPercentage*
  commentId: Overload:DotNetHelper_Contracts.Helpers.MathHelper.GetPercentage
  name: GetPercentage
  nameWithType: MathHelper.GetPercentage
  fullName: DotNetHelper_Contracts.Helpers.MathHelper.GetPercentage
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DotNetHelper_Contracts.Helpers.MathHelper.FindPercentage*
  commentId: Overload:DotNetHelper_Contracts.Helpers.MathHelper.FindPercentage
  name: FindPercentage
  nameWithType: MathHelper.FindPercentage
  fullName: DotNetHelper_Contracts.Helpers.MathHelper.FindPercentage
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: DotNetHelper_Contracts.Helpers.MathHelper.Divide*
  commentId: Overload:DotNetHelper_Contracts.Helpers.MathHelper.Divide
  name: Divide
  nameWithType: MathHelper.Divide
  fullName: DotNetHelper_Contracts.Helpers.MathHelper.Divide
- uid: System.Tuple{System.Int32,System.Int32}
  commentId: T:System.Tuple{System.Int32,System.Int32}
  parent: System
  definition: System.Tuple`2
  name: Tuple<Int32, Int32>
  nameWithType: Tuple<Int32, Int32>
  fullName: System.Tuple<System.Int32, System.Int32>
  nameWithType.vb: Tuple(Of Int32, Int32)
  fullName.vb: System.Tuple(Of System.Int32, System.Int32)
  name.vb: Tuple(Of Int32, Int32)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2
  commentId: T:System.Tuple`2
  isExternal: true
  name: Tuple<T1, T2>
  nameWithType: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  nameWithType.vb: Tuple(Of T1, T2)
  fullName.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
