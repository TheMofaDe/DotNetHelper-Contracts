{
  "api/DotNetHelper_Contracts.Extension.ExtStringBuilder.html": {
    "href": "api/DotNetHelper_Contracts.Extension.ExtStringBuilder.html",
    "title": "Class ExtStringBuilder | docfx seed website",
    "keywords": "Class ExtStringBuilder Inheritance Object ExtStringBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Extension Assembly : cs.temp.dll.dll Syntax public static class ExtStringBuilder Methods CopyToStream(StringBuilder, MemoryStream, Encoding) Copies the contents of the StringBuilder to the MemoryStream using the specified encoding Declaration public static void CopyToStream(this StringBuilder builder, MemoryStream ms, Encoding encoding) Parameters Type Name Description StringBuilder builder StringBuilder source MemoryStream ms MemoryStream destination Encoding encoding Encoding used for converter string into byte-stream ReplaceFirstOccurrence(StringBuilder, String, String, StringComparison) Declaration public static StringBuilder ReplaceFirstOccurrence(this StringBuilder source, string find, string replace, StringComparison comparison) Parameters Type Name Description StringBuilder source String find String replace StringComparison comparison Returns Type Description StringBuilder ReplaceLastOccurrence(StringBuilder, String, String, StringComparison) Declaration public static StringBuilder ReplaceLastOccurrence(this StringBuilder source, string find, string replace, StringComparison comparison) Parameters Type Name Description StringBuilder source String find String replace StringComparison comparison Returns Type Description StringBuilder"
  },
  "api/DotNetHelper_Contracts.Enum.SQLType.html": {
    "href": "api/DotNetHelper_Contracts.Enum.SQLType.html",
    "title": "Enum SQLType | docfx seed website",
    "keywords": "Enum SQLType Namespace : DotNetHelper_Contracts.Enum Assembly : cs.temp.dll.dll Syntax public enum SQLType Fields Name Description MYSql Oledb Oracle SQLLite SQLServer"
  },
  "api/DotNetHelper_Contracts.Enum.IO.AddOrRemoveEnum.html": {
    "href": "api/DotNetHelper_Contracts.Enum.IO.AddOrRemoveEnum.html",
    "title": "Enum AddOrRemoveEnum | docfx seed website",
    "keywords": "Enum AddOrRemoveEnum Enum AddOrRemoveEnum Namespace : DotNetHelper_Contracts.Enum.IO Assembly : cs.temp.dll.dll Syntax public enum AddOrRemoveEnum Fields Name Description Add The add Remove The remove"
  },
  "api/DotNetHelper_Contracts.CustomException.html": {
    "href": "api/DotNetHelper_Contracts.CustomException.html",
    "title": "Namespace DotNetHelper_Contracts.CustomException | docfx seed website",
    "keywords": "Namespace DotNetHelper_Contracts.CustomException Classes BadCodeException Custom Exception that lets the user know a code change is required to fix this error SerializableException UserSerializableException"
  },
  "api/DotNetHelper_Contracts.Extension.ReflectionExtensions.html": {
    "href": "api/DotNetHelper_Contracts.Extension.ReflectionExtensions.html",
    "title": "Class ReflectionExtensions | docfx seed website",
    "keywords": "Class ReflectionExtensions Extensions to help with reflection. Inheritance Object ReflectionExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Extension Assembly : cs.temp.dll.dll Syntax public static class ReflectionExtensions Methods GetConstructorWithMostParameters(Type) Gets the constructor that contains the most parameters. Declaration public static ConstructorInfo GetConstructorWithMostParameters(this Type type) Parameters Type Name Description Type type The type. Returns Type Description ConstructorInfo GetMemberExpression(MemberInfo, Expression) Gets a member expression for the member. Declaration public static MemberExpression GetMemberExpression(this MemberInfo member, Expression expression) Parameters Type Name Description MemberInfo member The member to get the expression for. Expression expression The member expression. Returns Type Description MemberExpression The member expression. HasParameterlessConstructor(Type) Gets a value indicating if the given type has a parameterless constructor. True if it has a parameterless constructor, otherwise false. Declaration public static bool HasParameterlessConstructor(this Type type) Parameters Type Name Description Type type The type. Returns Type Description Boolean IsAnonymous(Type) Gets a value indicating if the given type is anonymous. True for anonymous, otherwise false. Declaration public static bool IsAnonymous(this Type type) Parameters Type Name Description Type type The type. Returns Type Description Boolean IsUserDefinedStruct(Type) Gets a value indicating if the type is a user defined struct. True if it is a user defined struct, otherwise false. Declaration public static bool IsUserDefinedStruct(this Type type) Parameters Type Name Description Type type The type. Returns Type Description Boolean MemberType(MemberInfo) Gets the type from the member. Declaration public static Type MemberType(this MemberInfo member) Parameters Type Name Description MemberInfo member The member to get the type from. Returns Type Description Type The type."
  },
  "api/DotNetHelper_Contracts.Extension.ExtProgress.html": {
    "href": "api/DotNetHelper_Contracts.Extension.ExtProgress.html",
    "title": "Class ExtProgress | docfx seed website",
    "keywords": "Class ExtProgress Inheritance Object ExtProgress Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Extension Assembly : cs.temp.dll.dll Syntax public static class ExtProgress Methods OnProgressChange<T>(IProgress<T>, Action<T>, T) Declaration public static void OnProgressChange<T>(this IProgress<T> progress, Action<T> action, T value) Parameters Type Name Description IProgress <T> progress Action <T> action T value Type Parameters Name Description T"
  },
  "api/DotNetHelper_Contracts.Enum.IO.FileType.html": {
    "href": "api/DotNetHelper_Contracts.Enum.IO.FileType.html",
    "title": "Enum FileType | docfx seed website",
    "keywords": "Enum FileType Namespace : DotNetHelper_Contracts.Enum.IO Assembly : cs.temp.dll.dll Syntax public enum FileType Fields Name Description AllTypes Csv Json Xml"
  },
  "api/DotNetHelper_Contracts.Enum.MyEnvironment.html": {
    "href": "api/DotNetHelper_Contracts.Enum.MyEnvironment.html",
    "title": "Enum MyEnvironment | docfx seed website",
    "keywords": "Enum MyEnvironment Namespace : DotNetHelper_Contracts.Enum Assembly : cs.temp.dll.dll Syntax public enum MyEnvironment Fields Name Description Development Production Staging"
  },
  "api/DotNetHelper_Contracts.Enum.FileRepo.html": {
    "href": "api/DotNetHelper_Contracts.Enum.FileRepo.html",
    "title": "Enum FileRepo | docfx seed website",
    "keywords": "Enum FileRepo Enum FileRepo Namespace : DotNetHelper_Contracts.Enum Assembly : cs.temp.dll.dll Syntax public enum FileRepo Fields Name Description Audio The audio CurrentDirectory The current directory Data The data Downloads The downloads Files The files Logs The logs Temp The temporary Users Videos The videos"
  },
  "api/DotNetHelper_Contracts.Enum.IO.IOType.html": {
    "href": "api/DotNetHelper_Contracts.Enum.IO.IOType.html",
    "title": "Enum IOType | docfx seed website",
    "keywords": "Enum IOType Namespace : DotNetHelper_Contracts.Enum.IO Assembly : cs.temp.dll.dll Syntax public enum IOType Fields Name Description Both File Folder"
  },
  "api/DotNetHelper_Contracts.Comparer.html": {
    "href": "api/DotNetHelper_Contracts.Comparer.html",
    "title": "Namespace DotNetHelper_Contracts.Comparer | docfx seed website",
    "keywords": "Namespace DotNetHelper_Contracts.Comparer Classes EqualityComparerString ExceptionEqualityComparer"
  },
  "api/DotNetHelper_Contracts.Enum.IO.FileOption.html": {
    "href": "api/DotNetHelper_Contracts.Enum.IO.FileOption.html",
    "title": "Enum FileOption | docfx seed website",
    "keywords": "Enum FileOption Enum FileOption Namespace : DotNetHelper_Contracts.Enum.IO Assembly : cs.temp.dll.dll Syntax public enum FileOption Fields Name Description Append The append DoNothingIfExist The do nothing if exist IncrementFileExtensionIfExist Increments the file extension +1 IncrementFileNameIfExist Increment the file name +1 Overwrite The overwrite"
  },
  "api/DotNetHelper_Contracts.Tools.CommandPrompt.html": {
    "href": "api/DotNetHelper_Contracts.Tools.CommandPrompt.html",
    "title": "Class CommandPrompt | docfx seed website",
    "keywords": "Class CommandPrompt A command-line helper class that makes it easy to run commands. Inheritance Object CommandPrompt Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Tools Assembly : cs.temp.dll.dll Syntax public class CommandPrompt Constructors CommandPrompt(String, Boolean) Declaration public CommandPrompt(string cmdLocation = \"C:\\\\windows\\\\system32\\\\cmd.exe\", bool hideWindow = true) Parameters Type Name Description String cmdLocation Boolean hideWindow Properties CreateNoWindow Declaration public bool CreateNoWindow { get; set; } Property Value Type Description Boolean RedirectStandardError Declaration public bool RedirectStandardError { get; set; } Property Value Type Description Boolean RedirectStandardOutput Declaration public bool RedirectStandardOutput { get; set; } Property Value Type Description Boolean UseShellExecute Declaration public bool UseShellExecute { get; set; } Property Value Type Description Boolean Methods CreateStartInfo(String, String, Boolean, DataReceivedEventHandler, DataReceivedEventHandler) Declaration public ProcessStartInfo CreateStartInfo(string command, string workingDirectory, bool hideWindow = true, DataReceivedEventHandler outputDataReceived = null, DataReceivedEventHandler errorDataReceived = null) Parameters Type Name Description String command command to run String workingDirectory directory to run command from Boolean hideWindow self-explained. If true will show command promopt during execution of thecommand DataReceivedEventHandler outputDataReceived event handler for responses return during the execution of the command DataReceivedEventHandler errorDataReceived event handler for error responses return during the execution of the command Returns Type Description ProcessStartInfo RunCommand(ProcessStartInfo, DataReceivedEventHandler, DataReceivedEventHandler, EventHandler) Declaration public int? RunCommand(ProcessStartInfo info, DataReceivedEventHandler outputDataReceived = null, DataReceivedEventHandler errorDataReceived = null, EventHandler exited = null) Parameters Type Name Description ProcessStartInfo info DataReceivedEventHandler outputDataReceived event handler for responses return during the execution of the command DataReceivedEventHandler errorDataReceived event handler for error responses return during the execution of the command EventHandler exited Returns Type Description Nullable < Int32 > the process Exit Code RunCommand(String, ProcessStartInfo, DataReceivedEventHandler, DataReceivedEventHandler, EventHandler) Declaration public int? RunCommand(string command, ProcessStartInfo info = null, DataReceivedEventHandler outputDataReceived = null, DataReceivedEventHandler errorDataReceived = null, EventHandler exited = null) Parameters Type Name Description String command ProcessStartInfo info DataReceivedEventHandler outputDataReceived event handler for responses return during the execution of the command DataReceivedEventHandler errorDataReceived event handler for error responses return during the execution of the command EventHandler exited Returns Type Description Nullable < Int32 > the process Exit Code RunCommand(String, String, ProcessStartInfo, DataReceivedEventHandler, DataReceivedEventHandler, EventHandler) Declaration public int? RunCommand(string command, string workingDirectory, ProcessStartInfo info = null, DataReceivedEventHandler outputDataReceived = null, DataReceivedEventHandler errorDataReceived = null, EventHandler exited = null) Parameters Type Name Description String command the command to run String workingDirectory ProcessStartInfo info DataReceivedEventHandler outputDataReceived event handler for responses return during the execution of the command DataReceivedEventHandler errorDataReceived event handler for error responses return during the execution of the command EventHandler exited Returns Type Description Nullable < Int32 > the process Exit Code"
  },
  "api/DotNetHelper_Contracts.Extension.ExtObject.html": {
    "href": "api/DotNetHelper_Contracts.Extension.ExtObject.html",
    "title": "Class ExtObject | docfx seed website",
    "keywords": "Class ExtObject Inheritance Object ExtObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Extension Assembly : cs.temp.dll.dll Syntax public static class ExtObject Methods IsNullThrow(Object, String, Exception) Declaration public static void IsNullThrow(this object obj, string name, Exception error = null) Parameters Type Name Description Object obj String name Exception error ToBoolEx(Object) The value passed as the first parameter is converted to a boolean value. If value is 0, null, false, NaN, DBNull, char '\\0', char '0', the empty string (\"\"), the string \"false\"(ignore case) or the string \"0\" will return false. All other values, including any object, will return true. Declaration public static bool ToBoolEx(this object o) Parameters Type Name Description Object o input value Returns Type Description Boolean bool ToByte(Object) Declaration public static byte ToByte(this object o) Parameters Type Name Description Object o Returns Type Description Byte ToByte(Object, Boolean, Byte) Declaration public static byte ToByte(this object o, bool throwEx, byte returnValueOnError = default(byte)) Parameters Type Name Description Object o Boolean throwEx Byte returnValueOnError Returns Type Description Byte ToChar(Object) Declaration public static char ToChar(this object o) Parameters Type Name Description Object o Returns Type Description Char ToChar(Object, Boolean, Char) Declaration public static char ToChar(this object o, bool throwEx, char returnValueOnError = default(char)) Parameters Type Name Description Object o Boolean throwEx Char returnValueOnError Returns Type Description Char ToComparer<T>(Comparison<T>) Declaration public static IComparer<T> ToComparer<T>(this Comparison<T> comparison) Parameters Type Name Description Comparison <T> comparison Returns Type Description IComparer <T> Type Parameters Name Description T ToDateTime(Object) Declaration public static DateTime ToDateTime(this object o) Parameters Type Name Description Object o Returns Type Description DateTime ToDateTime(Object, Boolean, DateTime) Declaration public static DateTime ToDateTime(this object o, bool throwEx, DateTime returnValueOnError = default(DateTime)) Parameters Type Name Description Object o Boolean throwEx DateTime returnValueOnError Returns Type Description DateTime ToDecimal(Object) Declaration public static decimal ToDecimal(this object o) Parameters Type Name Description Object o Returns Type Description Decimal ToDecimal(Object, Boolean, Int32) Declaration public static decimal ToDecimal(this object o, bool throwEx, int returnValueOnError = default(int)) Parameters Type Name Description Object o Boolean throwEx Int32 returnValueOnError Returns Type Description Decimal ToDouble(Object) Declaration public static double ToDouble(this object o) Parameters Type Name Description Object o Returns Type Description Double ToDouble(Object, Boolean, Double) Declaration public static double ToDouble(this object o, bool throwEx, double returnValueOnError = default(double)) Parameters Type Name Description Object o Boolean throwEx Double returnValueOnError Returns Type Description Double ToEnum<T>(Object) Declaration public static T ToEnum<T>(this object o) where T : struct Parameters Type Name Description Object o Returns Type Description T Type Parameters Name Description T ToEnum<T>(Object, Boolean, T) Declaration public static T ToEnum<T>(this object o, bool throwEx, T returnValueOnError = default(T)) where T : struct Parameters Type Name Description Object o Boolean throwEx T returnValueOnError Returns Type Description T Type Parameters Name Description T ToFloat(Object) Declaration public static float ToFloat(this object o) Parameters Type Name Description Object o Returns Type Description Single ToFloat(Object, Boolean) Declaration public static float ToFloat(this object o, bool throwEx) Parameters Type Name Description Object o Boolean throwEx Returns Type Description Single ToInt(Object) Declaration public static int ToInt(this object o) Parameters Type Name Description Object o Returns Type Description Int32 ToInt(Object, Boolean, Int32) Declaration public static int ToInt(this object o, bool throwEx, int returnValueOnError = default(int)) Parameters Type Name Description Object o Boolean throwEx Int32 returnValueOnError Returns Type Description Int32 ToLong(Object) Declaration public static long ToLong(this object o) Parameters Type Name Description Object o Returns Type Description Int64 ToLong(Object, Boolean) Declaration public static long ToLong(this object o, bool throwEx) Parameters Type Name Description Object o Boolean throwEx Returns Type Description Int64 ToSByte(Object) Declaration public static sbyte ToSByte(this object o) Parameters Type Name Description Object o Returns Type Description SByte ToSByte(Object, Boolean) Declaration public static sbyte ToSByte(this object o, bool throwEx) Parameters Type Name Description Object o Boolean throwEx Returns Type Description SByte ToShort(Object) Declaration public static short ToShort(this object o) Parameters Type Name Description Object o Returns Type Description Int16 ToShort(Object, Boolean) Declaration public static short ToShort(this object o, bool throwEx) Parameters Type Name Description Object o Boolean throwEx Returns Type Description Int16 ToUInt(Object) Declaration public static uint ToUInt(this object o) Parameters Type Name Description Object o Returns Type Description UInt32 ToUInt(Object, Boolean, UInt32) Declaration public static uint ToUInt(this object o, bool throwEx, uint returnValueOnError = default(uint)) Parameters Type Name Description Object o Boolean throwEx UInt32 returnValueOnError Returns Type Description UInt32 ToULong(Object) Declaration public static ulong ToULong(this object o) Parameters Type Name Description Object o Returns Type Description UInt64 ToULong(Object, Boolean) Declaration public static ulong ToULong(this object o, bool throwEx) Parameters Type Name Description Object o Boolean throwEx Returns Type Description UInt64 ToUShort(Object) Declaration public static ushort ToUShort(this object o) Parameters Type Name Description Object o Returns Type Description UInt16 ToUShort(Object, Boolean) Declaration public static ushort ToUShort(this object o, bool throwEx) Parameters Type Name Description Object o Boolean throwEx Returns Type Description UInt16"
  },
  "api/DotNetHelper_Contracts.Extension.ExtDictionary.html": {
    "href": "api/DotNetHelper_Contracts.Extension.ExtDictionary.html",
    "title": "Class ExtDictionary | docfx seed website",
    "keywords": "Class ExtDictionary Inheritance Object ExtDictionary Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Extension Assembly : cs.temp.dll.dll Syntax public static class ExtDictionary Methods AddIfNotExist<K, V>(IDictionary<K, V>, K, V) Declaration public static V AddIfNotExist<K, V>(this IDictionary<K, V> dictionary, K key, V value) Parameters Type Name Description IDictionary <K, V> dictionary K key V value Returns Type Description V Type Parameters Name Description K V AddOrUpdate<K, V>(IDictionary<K, V>, K, V) create key with value if not exist otherwise update value for key Declaration public static V AddOrUpdate<K, V>(this IDictionary<K, V> dictionary, K key, V value) Parameters Type Name Description IDictionary <K, V> dictionary K key V value Returns Type Description V return new value Type Parameters Name Description K V AddOrUpdateHighestValue<K>(IDictionary<K, Int32>, K, Int32) Declaration public static void AddOrUpdateHighestValue<K>(this IDictionary<K, int> dictionary, K key, int value) Parameters Type Name Description IDictionary <K, Int32 > dictionary K key Int32 value Type Parameters Name Description K AddOrUpdateLowestValue<K>(IDictionary<K, Int32>, K, Int32) Declaration public static void AddOrUpdateLowestValue<K>(this IDictionary<K, int> dictionary, K key, int value) Parameters Type Name Description IDictionary <K, Int32 > dictionary K key Int32 value Type Parameters Name Description K Clone<K, V>(IDictionary<K, V>) Declaration public static Dictionary<K, V> Clone<K, V>(this IDictionary<K, V> dictionary) Parameters Type Name Description IDictionary <K, V> dictionary Returns Type Description Dictionary <K, V> Type Parameters Name Description K V GetKey<T>(IOrderedDictionary, Int32) Declaration public static T GetKey<T>(this IOrderedDictionary dictionary, int index) Parameters Type Name Description IOrderedDictionary dictionary Int32 index Returns Type Description T Type Parameters Name Description T GetValue<T, U>(IOrderedDictionary, T) Declaration public static U GetValue<T, U>(this IOrderedDictionary dictionary, T key) Parameters Type Name Description IOrderedDictionary dictionary T key Returns Type Description U Type Parameters Name Description T U GetValueOrDefaultValue<K, V>(IDictionary<K, V>, K, V) Declaration public static V GetValueOrDefaultValue<K, V>(this IDictionary<K, V> dictionary, K key, V defaultValue = null) Parameters Type Name Description IDictionary <K, V> dictionary K key V defaultValue Returns Type Description V Type Parameters Name Description K V MapToDataTable(IDictionary<String, Object>, String) Declaration public static DataTable MapToDataTable(this IDictionary<string, object> dictionary, string tableName = null) Parameters Type Name Description IDictionary < String , Object > dictionary String tableName Returns Type Description DataTable ToDataReader(IDictionary<String, Object>) Declaration public static IDataReader ToDataReader(this IDictionary<string, object> dictionary) Parameters Type Name Description IDictionary < String , Object > dictionary Returns Type Description IDataReader"
  },
  "api/DotNetHelper_Contracts.Models.Web.ApiResponse.html": {
    "href": "api/DotNetHelper_Contracts.Models.Web.ApiResponse.html",
    "title": "Class ApiResponse | docfx seed website",
    "keywords": "Class ApiResponse Inheritance Object ApiResponse Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Models.Web Assembly : cs.temp.dll.dll Syntax public class ApiResponse Constructors ApiResponse() Declaration public ApiResponse() ApiResponse(Int32, String, Object, List<Exception>) Declaration public ApiResponse(int statusCode, string status, object result = null, List<Exception> errorMessage = null) Parameters Type Name Description Int32 statusCode String status Object result List < Exception > errorMessage Properties Errors Declaration public List<Exception> Errors { get; set; } Property Value Type Description List < Exception > MessageForUser Declaration public string MessageForUser { get; set; } Property Value Type Description String Result Declaration public object Result { get; set; } Property Value Type Description Object Status Declaration public string Status { get; set; } Property Value Type Description String StatusCode Declaration public int StatusCode { get; set; } Property Value Type Description Int32 Success Declaration public bool Success { get; set; } Property Value Type Description Boolean Version Declaration public string Version { get; } Property Value Type Description String"
  },
  "api/DotNetHelper_Contracts.Helpers.DateTimeHelper.TimeElapse.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.DateTimeHelper.TimeElapse.html",
    "title": "Enum DateTimeHelper.TimeElapse | docfx seed website",
    "keywords": "Enum DateTimeHelper.TimeElapse Time Elapse Enum Value is basically the # of milliseconds in the selected enum Namespace : DotNetHelper_Contracts.Helpers Assembly : cs.temp.dll.dll Syntax public enum TimeElapse Fields Name Description Day Hour Minute Second Week"
  },
  "api/DotNetHelper_Contracts.Extension.ExtList.html": {
    "href": "api/DotNetHelper_Contracts.Extension.ExtList.html",
    "title": "Class ExtList | docfx seed website",
    "keywords": "Class ExtList Inheritance Object ExtList Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Extension Assembly : cs.temp.dll.dll Syntax public static class ExtList Methods BatchIntoGroups<T>(List<T>, Int32) Declaration public static List<List<T>> BatchIntoGroups<T>(this List<T> source, int numberOfGroup) Parameters Type Name Description List <T> source Int32 numberOfGroup Returns Type Description List < List <T>> Type Parameters Name Description T BatchIntoGroupsWithMax<T>(List<T>, Int32) return a list of the source in groups of specified Declaration public static List<IGrouping<int, T>> BatchIntoGroupsWithMax<T>(this List<T> source, int maxNumberOfItemsInPerGroup) Parameters Type Name Description List <T> source Int32 maxNumberOfItemsInPerGroup Returns Type Description List < IGrouping < Int32 , T>> Type Parameters Name Description T GetRandomItems<T>(List<T>, Int32) Declaration public static List<T> GetRandomItems<T>(this List<T> list, int numberToReturn) Parameters Type Name Description List <T> list Int32 numberToReturn Returns Type Description List <T> Type Parameters Name Description T IsNullOrEmpty<T>(List<T>, Func<T, Boolean>) Method Name Pretty Much Says It All Declaration public static bool IsNullOrEmpty<T>(this List<T> source, Func<T, bool> whereClause = null) Parameters Type Name Description List <T> source Func <T, Boolean > whereClause Returns Type Description Boolean Type Parameters Name Description T"
  },
  "api/DotNetHelper_Contracts.Models.Web.ApiResponseExtension.html": {
    "href": "api/DotNetHelper_Contracts.Models.Web.ApiResponseExtension.html",
    "title": "Class ApiResponseExtension | docfx seed website",
    "keywords": "Class ApiResponseExtension Inheritance Object ApiResponseExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Models.Web Assembly : cs.temp.dll.dll Syntax public static class ApiResponseExtension Methods GetExceptionApiResponse(ApiResponse, Exception, MyEnvironment) Declaration public static ApiResponse GetExceptionApiResponse(this ApiResponse response, Exception error, MyEnvironment enviroment) Parameters Type Name Description ApiResponse response Exception error MyEnvironment enviroment Returns Type Description ApiResponse GetExceptionApiResponse(ApiResponse, Exception, MyEnvironment, String) Declaration public static ApiResponse GetExceptionApiResponse(this ApiResponse response, Exception error, MyEnvironment enviroment, string fromBody) Parameters Type Name Description ApiResponse response Exception error MyEnvironment enviroment String fromBody Returns Type Description ApiResponse"
  },
  "api/DotNetHelper_Contracts.Helpers.RandomHelper.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.RandomHelper.html",
    "title": "Class RandomHelper | docfx seed website",
    "keywords": "Class RandomHelper Inheritance Object RandomHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Helpers Assembly : cs.temp.dll.dll Syntax public static class RandomHelper Methods GetRandomString(Int32, Boolean, Boolean) Declaration public static string GetRandomString(int size, bool allowAlphaCharacters = true, bool allowNumericCharacters = true) Parameters Type Name Description Int32 size Boolean allowAlphaCharacters Boolean allowNumericCharacters Returns Type Description String"
  },
  "api/DotNetHelper_Contracts.CustomException.UserSerializableException.html": {
    "href": "api/DotNetHelper_Contracts.CustomException.UserSerializableException.html",
    "title": "Class UserSerializableException | docfx seed website",
    "keywords": "Class UserSerializableException Inheritance Object Exception SerializableException UserSerializableException Implements ISerializable _Exception Inherited Members SerializableException.ResourceName SerializableException.ValidationErrors Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.CustomException Assembly : cs.temp.dll.dll Syntax [Serializable] public sealed class UserSerializableException : SerializableException, ISerializable, _Exception Constructors UserSerializableException() Declaration public UserSerializableException() UserSerializableException(String, String) Declaration public UserSerializableException(string message, string username) Parameters Type Name Description String message String username UserSerializableException(String, String, Exception) Declaration public UserSerializableException(string message, string username, Exception innerException) Parameters Type Name Description String message String username Exception innerException UserSerializableException(String, String, String, IList<String>) Declaration public UserSerializableException(string message, string username, string resourceName, IList<string> validationErrors) Parameters Type Name Description String message String username String resourceName IList < String > validationErrors UserSerializableException(String, String, String, IList<String>, Exception) Declaration public UserSerializableException(string message, string username, string resourceName, IList<string> validationErrors, Exception innerException) Parameters Type Name Description String message String username String resourceName IList < String > validationErrors Exception innerException Properties Username Declaration public string Username { get; } Property Value Type Description String Methods GetObjectData(SerializationInfo, StreamingContext) Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Overrides SerializableException.GetObjectData(SerializationInfo, StreamingContext) Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/DotNetHelper_Contracts.Helpers.OneOffs.Alphabet.CaseType.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.OneOffs.Alphabet.CaseType.html",
    "title": "Enum Alphabet.CaseType | docfx seed website",
    "keywords": "Enum Alphabet.CaseType Namespace : DotNetHelper_Contracts.Helpers.OneOffs Assembly : cs.temp.dll.dll Syntax public enum CaseType Fields Name Description Lower Upper"
  },
  "api/DotNetHelper_Contracts.Helpers.DynamicObjectHelper.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.DynamicObjectHelper.html",
    "title": "Class DynamicObjectHelper | docfx seed website",
    "keywords": "Class DynamicObjectHelper Inheritance Object DynamicObjectHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Helpers Assembly : cs.temp.dll.dll Syntax public static class DynamicObjectHelper Methods AddProperty(ExpandoObject, String, Object) Declaration public static void AddProperty(ExpandoObject expandoObject, string propertyName, object value) Parameters Type Name Description ExpandoObject expandoObject String propertyName Object value AddPropertyChangedHandler(ExpandoObject, PropertyChangedEventHandler) Declaration public static void AddPropertyChangedHandler(ExpandoObject expandoObject, PropertyChangedEventHandler action) Parameters Type Name Description ExpandoObject expandoObject PropertyChangedEventHandler action GetProperties(ExpandoObject) return a dictionary of properties and values Declaration public static IDictionary<string, object> GetProperties(ExpandoObject expandoObject) Parameters Type Name Description ExpandoObject expandoObject Returns Type Description IDictionary < String , Object > GetPropertyValue(ExpandoObject, String, Boolean) Declaration public static object GetPropertyValue(ExpandoObject expandoObject, string propertyName, bool searchAllChildrens = true) Parameters Type Name Description ExpandoObject expandoObject String propertyName Boolean searchAllChildrens Returns Type Description Object RemoveProperty(ExpandoObject, String) Declaration public static void RemoveProperty(ExpandoObject expandoObject, string propertyName) Parameters Type Name Description ExpandoObject expandoObject String propertyName ToDataReader(ExpandoObject) Declaration public static IDataReader ToDataReader(ExpandoObject expandoObject) Parameters Type Name Description ExpandoObject expandoObject Returns Type Description IDataReader ToDataTable(ExpandoObject) Declaration public static DataTable ToDataTable(ExpandoObject expandoObject) Parameters Type Name Description ExpandoObject expandoObject Returns Type Description DataTable"
  },
  "api/DotNetHelper_Contracts.Extension.ExtMemberInfo.html": {
    "href": "api/DotNetHelper_Contracts.Extension.ExtMemberInfo.html",
    "title": "Class ExtMemberInfo | docfx seed website",
    "keywords": "Class ExtMemberInfo Inheritance Object ExtMemberInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Extension Assembly : cs.temp.dll.dll Syntax public static class ExtMemberInfo Methods GetMemberType(MemberInfo) Declaration public static Type GetMemberType(this MemberInfo member) Parameters Type Name Description MemberInfo member Returns Type Description Type GetValue(MemberInfo, Object) Declaration public static object GetValue(this MemberInfo member, object instance) Parameters Type Name Description MemberInfo member Object instance Returns Type Description Object SetValue(MemberInfo, Object, Object) Declaration public static void SetValue(this MemberInfo member, object instance, object value) Parameters Type Name Description MemberInfo member Object instance Object value"
  },
  "api/DotNetHelper_Contracts.Enum.DataType.html": {
    "href": "api/DotNetHelper_Contracts.Enum.DataType.html",
    "title": "Enum DataType | docfx seed website",
    "keywords": "Enum DataType Enumeration of logical data types that may appear in Namespace : DotNetHelper_Contracts.Enum Assembly : cs.temp.dll.dll Syntax public enum DataType Fields Name Description CreditCard Credit card data type Currency Currency data type Custom Custom data type, not one of the static data types we know Date Date data type DateTime DateTime data type Duration Duration data type EmailAddress Email address data type Html Html data type ImageUrl URL to an Image -- to be displayed as an image instead of text MultilineText Multiline text data type Password Password data type -- do not echo in UI PhoneNumber Phone number data type PostalCode Postal code data type Text Plain text data type Time Time data type Unknown Unknown data type Upload File upload data type Url URL data type"
  },
  "api/DotNetHelper_Contracts.Enum.DataSource.ActionType.html": {
    "href": "api/DotNetHelper_Contracts.Enum.DataSource.ActionType.html",
    "title": "Enum ActionType | docfx seed website",
    "keywords": "Enum ActionType Namespace : DotNetHelper_Contracts.Enum.DataSource Assembly : cs.temp.dll.dll Syntax public enum ActionType Fields Name Description Delete Insert Update Upsert"
  },
  "api/DotNetHelper_Contracts.Models.OAuth.AuthGoogle.html": {
    "href": "api/DotNetHelper_Contracts.Models.OAuth.AuthGoogle.html",
    "title": "Class AuthGoogle | docfx seed website",
    "keywords": "Class AuthGoogle Inheritance Object AuthGoogle Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Models.OAuth Assembly : cs.temp.dll.dll Syntax public class AuthGoogle Properties AccessTokenUrl Declaration public string AccessTokenUrl { get; set; } Property Value Type Description String AuthorizeUrl Declaration public string AuthorizeUrl { get; set; } Property Value Type Description String ClientId Declaration public string ClientId { get; set; } Property Value Type Description String ClientSecret Declaration public string ClientSecret { get; set; } Property Value Type Description String KeystoreService Declaration public string KeystoreService { get; set; } Property Value Type Description String Scope Declaration public string Scope { get; set; } Property Value Type Description String Scopes Declaration public string[] Scopes { get; set; } Property Value Type Description String [] Type Declaration public string Type { get; set; } Property Value Type Description String UserInfoUrl Declaration public string UserInfoUrl { get; set; } Property Value Type Description String"
  },
  "api/DotNetHelper_Contracts.Extension.Linq.LikeExpressionExtension.html": {
    "href": "api/DotNetHelper_Contracts.Extension.Linq.LikeExpressionExtension.html",
    "title": "Class LikeExpressionExtension | docfx seed website",
    "keywords": "Class LikeExpressionExtension Inheritance Object LikeExpressionExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Extension.Linq Assembly : cs.temp.dll.dll Syntax public static class LikeExpressionExtension Methods BuildLikeExpression<TElement>(Expression<Func<TElement, String>>, String, Char) Declaration public static Expression<Func<TElement, bool>> BuildLikeExpression<TElement>(Expression<Func<TElement, string>> valueSelector, string value, char wildcard) Parameters Type Name Description Expression < Func <TElement, String >> valueSelector String value Char wildcard Returns Type Description Expression < Func <TElement, Boolean >> Type Parameters Name Description TElement WhereLike<TSource>(IQueryable<TSource>, Expression<Func<TSource, String>>, String, Char) Declaration public static IQueryable<TSource> WhereLike<TSource>(this IQueryable<TSource> source, Expression<Func<TSource, string>> valueSelector, string value, char wildcard) Parameters Type Name Description IQueryable <TSource> source Expression < Func <TSource, String >> valueSelector String value Char wildcard Returns Type Description IQueryable <TSource> Type Parameters Name Description TSource"
  },
  "api/DotNetHelper_Contracts.Enum.LogSeverity.html": {
    "href": "api/DotNetHelper_Contracts.Enum.LogSeverity.html",
    "title": "Enum LogSeverity | docfx seed website",
    "keywords": "Enum LogSeverity Namespace : DotNetHelper_Contracts.Enum Assembly : cs.temp.dll.dll Syntax public enum LogSeverity Fields Name Description Critical Debug Error Fatal Information None Trace Warning"
  },
  "api/DotNetHelper_Contracts.Extension.ExtStack.html": {
    "href": "api/DotNetHelper_Contracts.Extension.ExtStack.html",
    "title": "Class ExtStack | docfx seed website",
    "keywords": "Class ExtStack Inheritance Object ExtStack Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Extension Assembly : cs.temp.dll.dll Syntax public static class ExtStack Methods Pop<T>(Stack<T>, Int32) Declaration public static IEnumerable<T> Pop<T>(this Stack<T> stack, int number) Parameters Type Name Description Stack <T> stack Int32 number Returns Type Description IEnumerable <T> Type Parameters Name Description T"
  },
  "api/DotNetHelper_Contracts.Attribute.DataValidationAttributeMembers.html": {
    "href": "api/DotNetHelper_Contracts.Attribute.DataValidationAttributeMembers.html",
    "title": "Enum DataValidationAttributeMembers | docfx seed website",
    "keywords": "Enum DataValidationAttributeMembers Enum DataValidationAttributeMembers Namespace : DotNetHelper_Contracts.Attribute Assembly : cs.temp.dll.dll Syntax public enum DataValidationAttributeMembers Fields Name Description SetCanContainLetter SetCanContainNumbers SetDataType SetIgnore SetMaxLengthSize The set maximum length size SetRequireValue"
  },
  "api/DotNetHelper_Contracts.Helpers.LinqToSQL.WherePart.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.LinqToSQL.WherePart.html",
    "title": "Class WherePart | docfx seed website",
    "keywords": "Class WherePart Inheritance Object WherePart Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Helpers.LinqToSQL Assembly : cs.temp.dll.dll Syntax public class WherePart Properties Parameters Declaration public Dictionary<string, object> Parameters { get; set; } Property Value Type Description Dictionary < String , Object > Sql Declaration public string Sql { get; set; } Property Value Type Description String Methods Concat(WherePart, String, WherePart) Declaration public static WherePart Concat(WherePart left, string operator, WherePart right) Parameters Type Name Description WherePart left String operator WherePart right Returns Type Description WherePart Concat(String, WherePart) Declaration public static WherePart Concat(string operator, WherePart operand) Parameters Type Name Description String operator WherePart operand Returns Type Description WherePart IsCollection(ref Int32, IEnumerable) Declaration public static WherePart IsCollection(ref int countStart, IEnumerable values) Parameters Type Name Description Int32 countStart IEnumerable values Returns Type Description WherePart IsParameter(Int32, Object) Declaration public static WherePart IsParameter(int count, object value) Parameters Type Name Description Int32 count Object value Returns Type Description WherePart IsSql(String) Declaration public static WherePart IsSql(string sql) Parameters Type Name Description String sql Returns Type Description WherePart"
  },
  "api/DotNetHelper_Contracts.Helpers.DateTimeHelper.CalendarMonth.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.DateTimeHelper.CalendarMonth.html",
    "title": "Enum DateTimeHelper.CalendarMonth | docfx seed website",
    "keywords": "Enum DateTimeHelper.CalendarMonth Namespace : DotNetHelper_Contracts.Helpers Assembly : cs.temp.dll.dll Syntax public enum CalendarMonth : byte Fields Name Description April August December February January July June March May November October September"
  },
  "api/DotNetHelper_Contracts.Extension.TimeSpanExtension.html": {
    "href": "api/DotNetHelper_Contracts.Extension.TimeSpanExtension.html",
    "title": "Class TimeSpanExtension | docfx seed website",
    "keywords": "Class TimeSpanExtension Inheritance Object TimeSpanExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Extension Assembly : cs.temp.dll.dll Syntax public static class TimeSpanExtension Methods ToCancellationTokenSource(TimeSpan) Declaration public static CancellationTokenSource ToCancellationTokenSource(this TimeSpan span) Parameters Type Name Description TimeSpan span Returns Type Description CancellationTokenSource"
  },
  "api/DotNetHelper_Contracts.Extension.ExtString.html": {
    "href": "api/DotNetHelper_Contracts.Extension.ExtString.html",
    "title": "Class ExtString | docfx seed website",
    "keywords": "Class ExtString Inheritance Object ExtString Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Extension Assembly : cs.temp.dll.dll Syntax public static class ExtString Methods CloneString(String, Int32) Declaration public static string CloneString(this string value, int count) Parameters Type Name Description String value Int32 count Returns Type Description String GetBytes(String, Encoding) Declaration public static byte[] GetBytes(this string value, Encoding encoding) Parameters Type Name Description String value Encoding encoding Returns Type Description Byte [] ReplaceFirstOccurrence(String, String, String, StringComparison) Declaration public static string ReplaceFirstOccurrence(this string source, string find, string replace, StringComparison comparison) Parameters Type Name Description String source String find String replace StringComparison comparison Returns Type Description String ReplaceLastOccurrence(String, String, String, StringComparison) Declaration public static string ReplaceLastOccurrence(this string source, string find, string replace, StringComparison comparison) Parameters Type Name Description String source String find String replace StringComparison comparison Returns Type Description String"
  },
  "api/DotNetHelper_Contracts.Extension.ProgressStream.html": {
    "href": "api/DotNetHelper_Contracts.Extension.ProgressStream.html",
    "title": "Class ProgressStream | docfx seed website",
    "keywords": "Class ProgressStream Inheritance Object ProgressStream Namespace : DotNetHelper_Contracts.Extension Assembly : cs.temp.dll.dll Syntax public class ProgressStream : Stream Constructors ProgressStream(Stream) Creates a new ProgressStream supplying the stream for it to report on. Declaration public ProgressStream(Stream stream) Parameters Type Name Description Stream stream The underlying stream that will be reported on when bytes are read or written. Properties CanRead Declaration public override bool CanRead { get; } Property Value Type Description Boolean CanSeek Declaration public override bool CanSeek { get; } Property Value Type Description Boolean CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description Boolean Length Declaration public override long Length { get; } Property Value Type Description Int64 Position Declaration public override long Position { get; set; } Property Value Type Description Int64 Methods Close() Declaration public override void Close() Flush() Declaration public override void Flush() OnBytesMoved(Int32, Boolean) Declaration protected virtual void OnBytesMoved(int bytesMoved, bool isRead) Parameters Type Name Description Int32 bytesMoved Boolean isRead OnBytesRead(Int32) Declaration protected virtual void OnBytesRead(int bytesMoved) Parameters Type Name Description Int32 bytesMoved OnBytesWritten(Int32) Declaration protected virtual void OnBytesWritten(int bytesMoved) Parameters Type Name Description Int32 bytesMoved Read(Byte[], Int32, Int32) Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Returns Type Description Int32 Seek(Int64, SeekOrigin) Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description Int64 offset SeekOrigin origin Returns Type Description Int64 SetLength(Int64) Declaration public override void SetLength(long value) Parameters Type Name Description Int64 value Write(Byte[], Int32, Int32) Declaration public override void Write(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Events BytesMoved Raised when bytes are either read or written to the stream. Declaration public event ProgressChangedEventHandler BytesMoved Event Type Type Description ProgressChangedEventHandler BytesRead Raised when bytes are read from the stream. Declaration public event ProgressChangedEventHandler BytesRead Event Type Type Description ProgressChangedEventHandler BytesWritten Raised when bytes are written to the stream. Declaration public event ProgressChangedEventHandler BytesWritten Event Type Type Description ProgressChangedEventHandler"
  },
  "api/DotNetHelper_Contracts.Helpers.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.html",
    "title": "Namespace DotNetHelper_Contracts.Helpers | docfx seed website",
    "keywords": "Namespace DotNetHelper_Contracts.Helpers Classes BytesHelper DateTimeHelper DynamicObjectHelper ExpressionHelper Linq2SqlGenerator MathHelper PredicateBuilder<T> RandomHelper Reflect Provides various reflection-related methods. RegexHelper WildCardHelper Enums DateTimeHelper.CalendarMonth DateTimeHelper.TimeElapse Time Elapse Enum Value is basically the # of milliseconds in the selected enum"
  },
  "api/DotNetHelper_Contracts.Models.Web.html": {
    "href": "api/DotNetHelper_Contracts.Models.Web.html",
    "title": "Namespace DotNetHelper_Contracts.Models.Web | docfx seed website",
    "keywords": "Namespace DotNetHelper_Contracts.Models.Web Classes ApiResponse ApiResponseExtension"
  },
  "api/DotNetHelper_Contracts.Helpers.BytesHelper.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.BytesHelper.html",
    "title": "Class BytesHelper | docfx seed website",
    "keywords": "Class BytesHelper Inheritance Object BytesHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Helpers Assembly : cs.temp.dll.dll Syntax public static class BytesHelper Methods DeepEqual(Byte[], Byte[]) Declaration public static bool DeepEqual(byte[] one, byte[] two) Parameters Type Name Description Byte [] one Byte [] two Returns Type Description Boolean"
  },
  "api/DotNetHelper_Contracts.Attribute.DataValidationAttribute.html": {
    "href": "api/DotNetHelper_Contracts.Attribute.DataValidationAttribute.html",
    "title": "Class DataValidationAttribute | docfx seed website",
    "keywords": "Class DataValidationAttribute Class DataValidationAttribute. Inheritance Object Attribute DataValidationAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Attribute Assembly : cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property)] public class DataValidationAttribute : Attribute, _Attribute Properties CanContainLetter Gets or sets a value indicating whether this instance can contain letter. Declaration public bool? CanContainLetter { get; set; } Property Value Type Description Nullable < Boolean > null if [can contain letter] contains no value, true if [can contain letter]; otherwise, false . CanContainNumbers Gets or sets a value indicating whether this instance can contain numbers. Declaration public bool? CanContainNumbers { get; set; } Property Value Type Description Nullable < Boolean > null if [can contain numbers] contains no value, true if [can contain numbers]; otherwise, false . DataType Gets or sets the type of the data. Declaration public DataType? DataType { get; set; } Property Value Type Description Nullable < DataType > The type of the data. Ignore Gets or sets a value indicating whether this DataValidationAttribute is ignore. Declaration public bool? Ignore { get; set; } Property Value Type Description Nullable < Boolean > null if [ignore] contains no value, true if [ignore]; otherwise, false . MaxLengthSize Max Size Property Can Be Declaration public int? MaxLengthSize { get; set; } Property Value Type Description Nullable < Int32 > The maximum size of the length. RequireValue Specifies whether the property is required. Declaration public bool? RequireValue { get; set; } Property Value Type Description Nullable < Boolean > null if [require value] contains no value, true if [require value]; otherwise, false . SetCanContainLetter Gets or sets a value indicating whether [set can contain letter]. Declaration public bool SetCanContainLetter { get; set; } Property Value Type Description Boolean true if [set can contain letter]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using DataValidationAttribute wrong You Must Set This Attribute Value Before Trying To Get It There IS NO SUCH THING AS NULL SetCanContainNumbers Gets or sets a value indicating whether [set can contain numbers]. Declaration public bool SetCanContainNumbers { get; set; } Property Value Type Description Boolean true if [set can contain numbers]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using DataValidationAttribute wrong You Must Set This Attribute Value Before Trying To Get It There IS NO SUCH THING AS NULL SetDataType Gets or sets the type of the set data. Declaration public DataType SetDataType { get; set; } Property Value Type Description DataType The type of the set data. Exceptions Type Condition Exception Nooo... Your Using DataValidationAttribute wrong You Must Set This Attribute Value Before Trying To Get It There IS NO SUCH THING AS NULL SetIgnore Gets or sets a value indicating whether [set ignore]. Declaration public bool SetIgnore { get; set; } Property Value Type Description Boolean true if [set ignore]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using DataValidationAttribute wrong You Must Set This Attribute Value Before Trying To Get It There IS NO SUCH THING AS NULL SetMaxLengthSize Gets or sets the size of the set maximum length. Declaration public int SetMaxLengthSize { get; set; } Property Value Type Description Int32 The size of the set maximum length. Exceptions Type Condition Exception Nooo... Your Using DataValidationAttribute wrong You Must Set This Attribute Value Before Trying To Get It There IS NO SUCH THING AS NULL SetRequireValue Gets or sets a value indicating whether [set require value]. Declaration public bool SetRequireValue { get; set; } Property Value Type Description Boolean true if [set require value]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using DataValidationAttribute wrong You Must Set This Attribute Value Before Trying To Get It There IS NO SUCH THING AS NULL Implements System.Runtime.InteropServices._Attribute See Also Attribute"
  },
  "api/DotNetHelper_Contracts.Helpers.RegexHelper.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.RegexHelper.html",
    "title": "Class RegexHelper | docfx seed website",
    "keywords": "Class RegexHelper Inheritance Object RegexHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Helpers Assembly : cs.temp.dll.dll Syntax public static class RegexHelper Methods HasLetter(String) Declaration public static bool HasLetter(string inputString) Parameters Type Name Description String inputString Returns Type Description Boolean HasLettersAndNumbersOnly(String) Check if string contains letters only supports international letters too. Declaration public static bool HasLettersAndNumbersOnly(string inputString) Parameters Type Name Description String inputString Returns Type Description Boolean HasLettersNumbersAndUnderscoreOnly(String) Check if string contains letters only supports international letters too. Declaration public static bool HasLettersNumbersAndUnderscoreOnly(string inputString) Parameters Type Name Description String inputString Returns Type Description Boolean HasLettersOnly(String) Check if string contains letters only supports international letters too. Declaration public static bool HasLettersOnly(string inputString) Parameters Type Name Description String inputString Returns Type Description Boolean HasLowerCase(String) Declaration public static bool HasLowerCase(string inputString) Parameters Type Name Description String inputString Returns Type Description Boolean HasNumber(String) Declaration public static bool HasNumber(string inputString) Parameters Type Name Description String inputString Returns Type Description Boolean HasSpecialCharacters(String) Declaration public static bool HasSpecialCharacters(string inputString) Parameters Type Name Description String inputString Returns Type Description Boolean HasSpecialCharactersRegEx(String) Declaration public static bool HasSpecialCharactersRegEx(string inputString) Parameters Type Name Description String inputString Returns Type Description Boolean HasUpperCase(String) Declaration public static bool HasUpperCase(string inputString) Parameters Type Name Description String inputString Returns Type Description Boolean IsPasswordSecured(String) Declaration public static bool IsPasswordSecured(string inputVal) Parameters Type Name Description String inputVal Returns Type Description Boolean RemoveSpecialCharacters(String) Declaration public static string RemoveSpecialCharacters(string inputString) Parameters Type Name Description String inputString Returns Type Description String StringOccurrenceCount(String, String) Declaration public static int StringOccurrenceCount(string value, string lookFor) Parameters Type Name Description String value String lookFor Returns Type Description Int32"
  },
  "api/DotNetHelper_Contracts.Helpers.WildCardHelper.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.WildCardHelper.html",
    "title": "Class WildCardHelper | docfx seed website",
    "keywords": "Class WildCardHelper Inheritance Object WildCardHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Helpers Assembly : cs.temp.dll.dll Syntax public static class WildCardHelper Methods IsMatch(String, String, Char, Char) Tests whether specified string can be matched agains provided pattern string. Pattern may contain single- and multiple-replacing wildcard characters. Declaration public static bool IsMatch(string input, string pattern, char singleWildcard, char multipleWildcard) Parameters Type Name Description String input String which is matched against the pattern. String pattern Pattern against which string is matched. Char singleWildcard Character which can be used to replace any single character in input string. Char multipleWildcard Character which can be used to replace zero or more characters in input string. Returns Type Description Boolean true if pat matches the string str ; otherwise false."
  },
  "api/DotNetHelper_Contracts.Extension.Linq.html": {
    "href": "api/DotNetHelper_Contracts.Extension.Linq.html",
    "title": "Namespace DotNetHelper_Contracts.Extension.Linq | docfx seed website",
    "keywords": "Namespace DotNetHelper_Contracts.Extension.Linq Classes LikeExpressionExtension"
  },
  "api/DotNetHelper_Contracts.Helpers.PredicateBuilder-1.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.PredicateBuilder-1.html",
    "title": "Class PredicateBuilder<T> | docfx seed website",
    "keywords": "Class PredicateBuilder<T> Inheritance Object PredicateBuilder<T> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Helpers Assembly : cs.temp.dll.dll Syntax public class PredicateBuilder<T> Type Parameters Name Description T Properties Predicate Declaration public Expression<Func<T, bool>> Predicate { get; set; } Property Value Type Description Expression < Func <T, Boolean >> Methods And(Expression<Func<T, Boolean>>) Declaration public PredicateBuilder<T> And(Expression<Func<T, bool>> and) Parameters Type Name Description Expression < Func <T, Boolean >> and Returns Type Description PredicateBuilder <T> And(Boolean, Expression<Func<T, Boolean>>) Declaration public PredicateBuilder<T> And(bool apply, Expression<Func<T, bool>> and) Parameters Type Name Description Boolean apply Expression < Func <T, Boolean >> and Returns Type Description PredicateBuilder <T> New() Declaration public static PredicateBuilder<T> New() Returns Type Description PredicateBuilder <T> Not(Expression<Func<T, Boolean>>) Negates the predicate. Declaration public Expression<Func<T, bool>> Not(Expression<Func<T, bool>> expression) Parameters Type Name Description Expression < Func <T, Boolean >> expression Returns Type Description Expression < Func <T, Boolean >> Or(Expression<Func<T, Boolean>>) Declaration public PredicateBuilder<T> Or(Expression<Func<T, bool>> or) Parameters Type Name Description Expression < Func <T, Boolean >> or Returns Type Description PredicateBuilder <T> Or(Boolean, Expression<Func<T, Boolean>>) Declaration public PredicateBuilder<T> Or(bool apply, Expression<Func<T, bool>> or) Parameters Type Name Description Boolean apply Expression < Func <T, Boolean >> or Returns Type Description PredicateBuilder <T>"
  },
  "api/DotNetHelper_Contracts.Helpers.Linq2SqlGenerator.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.Linq2SqlGenerator.html",
    "title": "Class Linq2SqlGenerator | docfx seed website",
    "keywords": "Class Linq2SqlGenerator Inheritance Object Linq2SqlGenerator Namespace : DotNetHelper_Contracts.Helpers Assembly : cs.temp.dll.dll Syntax public class Linq2SqlGenerator : ExpressionVisitor Constructors Linq2SqlGenerator(StringBuilder) Declaration public Linq2SqlGenerator(StringBuilder sqlBuilder) Parameters Type Name Description StringBuilder sqlBuilder Methods GetSQLFromMember(MemberExpression, MemberExpression, BinaryExpression) Declaration public void GetSQLFromMember(MemberExpression left, MemberExpression right, BinaryExpression rightValue) Parameters Type Name Description MemberExpression left MemberExpression right BinaryExpression rightValue LinqToSqlWhereClause<T>(Expression<Func<T, Boolean>>, DataBaseType) Declaration public string LinqToSqlWhereClause<T>(Expression<Func<T, bool>> expression, DataBaseType type) where T : class Parameters Type Name Description Expression < Func <T, Boolean >> expression DataBaseType type Returns Type Description String Type Parameters Name Description T ResolveMemberExpression(Expression) Declaration public static MemberExpression ResolveMemberExpression(Expression expression) Parameters Type Name Description Expression expression Returns Type Description MemberExpression"
  },
  "api/DotNetHelper_Contracts.Comparer.EqualityComparerString.html": {
    "href": "api/DotNetHelper_Contracts.Comparer.EqualityComparerString.html",
    "title": "Class EqualityComparerString | docfx seed website",
    "keywords": "Class EqualityComparerString Inheritance Object EqualityComparerString Namespace : DotNetHelper_Contracts.Comparer Assembly : cs.temp.dll.dll Syntax public class EqualityComparerString : IEqualityComparer<string> Constructors EqualityComparerString(StringComparison) Declaration public EqualityComparerString(StringComparison comparer) Parameters Type Name Description StringComparison comparer Methods Equals(String, String) Declaration public bool Equals(string x, string y) Parameters Type Name Description String x String y Returns Type Description Boolean GetHashCode(String) Declaration public int GetHashCode(string obj) Parameters Type Name Description String obj Returns Type Description Int32"
  },
  "api/DotNetHelper_Contracts.CustomException.SerializableException.html": {
    "href": "api/DotNetHelper_Contracts.CustomException.SerializableException.html",
    "title": "Class SerializableException | docfx seed website",
    "keywords": "Class SerializableException Inheritance Object Exception SerializableException UserSerializableException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.CustomException Assembly : cs.temp.dll.dll Syntax [Serializable] public class SerializableException : Exception, ISerializable, _Exception Constructors SerializableException() Declaration public SerializableException() SerializableException(SerializationInfo, StreamingContext) Declaration protected SerializableException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context SerializableException(String) Declaration public SerializableException(string message) Parameters Type Name Description String message SerializableException(String, Exception) Declaration public SerializableException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException SerializableException(String, String, IList<String>) Declaration public SerializableException(string message, string resourceName, IList<string> validationErrors) Parameters Type Name Description String message String resourceName IList < String > validationErrors SerializableException(String, String, IList<String>, Exception) Declaration public SerializableException(string message, string resourceName, IList<string> validationErrors, Exception innerException) Parameters Type Name Description String message String resourceName IList < String > validationErrors Exception innerException Properties ResourceName Declaration public string ResourceName { get; } Property Value Type Description String ValidationErrors Declaration public IList<string> ValidationErrors { get; } Property Value Type Description IList < String > Methods GetObjectData(SerializationInfo, StreamingContext) Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/DotNetHelper_Contracts.Enum.html": {
    "href": "api/DotNetHelper_Contracts.Enum.html",
    "title": "Namespace DotNetHelper_Contracts.Enum | docfx seed website",
    "keywords": "Namespace DotNetHelper_Contracts.Enum Enums DataType Enumeration of logical data types that may appear in FileRepo Enum FileRepo LogSeverity MyEnvironment SerializableType SQLType"
  },
  "api/DotNetHelper_Contracts.Helpers.DateTimeHelper.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.DateTimeHelper.html",
    "title": "Class DateTimeHelper | docfx seed website",
    "keywords": "Class DateTimeHelper Inheritance Object DateTimeHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Helpers Assembly : cs.temp.dll.dll Syntax public static class DateTimeHelper Methods CalculateMonthEnd(DateTime) Declaration public static DateTime CalculateMonthEnd(DateTime dtDate) Parameters Type Name Description DateTime dtDate Returns Type Description DateTime FromTimeStamp(Int64) 通過时间戳獲取日期 Declaration public static DateTime FromTimeStamp(long timeStamp) Parameters Type Name Description Int64 timeStamp Returns Type Description DateTime TimeStamp(DateTime) 获取时间戳 Declaration public static long TimeStamp(this DateTime time) Parameters Type Name Description DateTime time Returns Type Description Int64"
  },
  "api/DotNetHelper_Contracts.Extension.ExtStream.html": {
    "href": "api/DotNetHelper_Contracts.Extension.ExtStream.html",
    "title": "Class ExtStream | docfx seed website",
    "keywords": "Class ExtStream Inheritance Object ExtStream Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Extension Assembly : cs.temp.dll.dll Syntax public static class ExtStream Methods Clear(Stream) Declaration public static Stream Clear(this Stream stream) Parameters Type Name Description Stream stream Returns Type Description Stream ReadToString(Stream, Encoding, Int32) Declaration public static string ReadToString(this Stream stream, Encoding encoding, int startPosition = 0) Parameters Type Name Description Stream stream Encoding encoding Int32 startPosition Returns Type Description String ResetPosition(Stream) Declaration public static Stream ResetPosition(this Stream stream) Parameters Type Name Description Stream stream Returns Type Description Stream ToArray(Stream) Declaration public static byte[] ToArray(this Stream stream) Parameters Type Name Description Stream stream Returns Type Description Byte []"
  },
  "api/DotNetHelper_Contracts.Helpers.Reflect.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.Reflect.html",
    "title": "Class Reflect | docfx seed website",
    "keywords": "Class Reflect Provides various reflection-related methods. Inheritance Object Reflect Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Helpers Assembly : cs.temp.dll.dll Syntax public static class Reflect Methods GetPropertyInfo<TSource, TProperty>(Expression<Func<TSource, TProperty>>) Returns a instance for the property referred to by the specified property expression. Declaration public static PropertyInfo GetPropertyInfo<TSource, TProperty>(Expression<Func<TSource, TProperty>> propertyExpression) Parameters Type Name Description Expression < Func <TSource, TProperty>> propertyExpression An representing a Func mapping an instance of type TSource to an instance of type TProperty. Returns Type Description PropertyInfo A instance for the property referred to by the specified property expression. Type Parameters Name Description TSource Type containing the property. TProperty Type of the property. GetPropertyName<TSource, TProperty>(Expression<Func<TSource, TProperty>>) Returns the name of the property referred to by the specified property expression. Declaration public static string GetPropertyName<TSource, TProperty>(Expression<Func<TSource, TProperty>> propertyExpression) Parameters Type Name Description Expression < Func <TSource, TProperty>> propertyExpression An representing a Func mapping an instance of type TSource to an instance of type TProperty. Returns Type Description String The name of the property referred to by the specified property expression. Type Parameters Name Description TSource Type containing the property. TProperty Type of the property."
  },
  "api/DotNetHelper_Contracts.Helpers.MathHelper.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.MathHelper.html",
    "title": "Class MathHelper | docfx seed website",
    "keywords": "Class MathHelper Inheritance Object MathHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Helpers Assembly : cs.temp.dll.dll Syntax public static class MathHelper Methods Divide(Int32, Int32) Declaration public static Tuple<int, int> Divide(int dividend, int divisor) Parameters Type Name Description Int32 dividend a number to be divided by another number. Int32 divisor a number that divides into another without a remainder. Returns Type Description Tuple < Int32 , Int32 > Result,Remainder FindPercentage(Double, Double) Declaration public static double FindPercentage(double value, double percent) Parameters Type Name Description Double value Double percent Returns Type Description Double GetPercentage(Int32, Int32, Int32) Declaration public static string GetPercentage(int value, int total, int decimalPlaces) Parameters Type Name Description Int32 value Int32 total Int32 decimalPlaces Returns Type Description String"
  },
  "api/DotNetHelper_Contracts.Helpers.ExpressionHelper.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.ExpressionHelper.html",
    "title": "Class ExpressionHelper | docfx seed website",
    "keywords": "Class ExpressionHelper Inheritance Object ExpressionHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Helpers Assembly : cs.temp.dll.dll Syntax public static class ExpressionHelper Methods GetPropertyNamesFromExpression<T>(Expression<Func<T, Object>>) Declaration public static List<string> GetPropertyNamesFromExpression<T>(this Expression<Func<T, object>> expression) Parameters Type Name Description Expression < Func <T, Object >> expression Returns Type Description List < String > Type Parameters Name Description T GetPropertyNamesFromExpressions<T>(Expression<Func<T, Object>>[]) Declaration public static List<string> GetPropertyNamesFromExpressions<T>(this Expression<Func<T, object>>[] expression) Parameters Type Name Description Expression < Func <T, Object >>[] expression Returns Type Description List < String > Type Parameters Name Description T"
  },
  "api/DotNetHelper_Contracts.Enum.DataSource.html": {
    "href": "api/DotNetHelper_Contracts.Enum.DataSource.html",
    "title": "Namespace DotNetHelper_Contracts.Enum.DataSource | docfx seed website",
    "keywords": "Namespace DotNetHelper_Contracts.Enum.DataSource Enums ActionType DataBaseType ScriptType"
  },
  "api/DotNetHelper_Contracts.Comparer.ExceptionEqualityComparer.html": {
    "href": "api/DotNetHelper_Contracts.Comparer.ExceptionEqualityComparer.html",
    "title": "Class ExceptionEqualityComparer | docfx seed website",
    "keywords": "Class ExceptionEqualityComparer Inheritance Object ExceptionEqualityComparer Namespace : DotNetHelper_Contracts.Comparer Assembly : cs.temp.dll.dll Syntax public class ExceptionEqualityComparer : IEqualityComparer<Exception> Methods Equals(Exception, Exception) Declaration public bool Equals(Exception e1, Exception e2) Parameters Type Name Description Exception e1 Exception e2 Returns Type Description Boolean GetHashCode(Exception) Declaration public int GetHashCode(Exception e) Parameters Type Name Description Exception e Returns Type Description Int32"
  },
  "api/DotNetHelper_Contracts.Enum.DataSource.ScriptType.html": {
    "href": "api/DotNetHelper_Contracts.Enum.DataSource.ScriptType.html",
    "title": "Enum ScriptType | docfx seed website",
    "keywords": "Enum ScriptType Namespace : DotNetHelper_Contracts.Enum.DataSource Assembly : cs.temp.dll.dll Syntax public enum ScriptType Fields Name Description HumanReadable Parameterized"
  },
  "api/DotNetHelper_Contracts.Helpers.LinqToSQL.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.LinqToSQL.html",
    "title": "Namespace DotNetHelper_Contracts.Helpers.LinqToSQL | docfx seed website",
    "keywords": "Namespace DotNetHelper_Contracts.Helpers.LinqToSQL Classes Generator WherePart"
  },
  "api/DotNetHelper_Contracts.Helpers.OneOffs.Alphabet.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.OneOffs.Alphabet.html",
    "title": "Class Alphabet | docfx seed website",
    "keywords": "Class Alphabet Inheritance Object Alphabet Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Helpers.OneOffs Assembly : cs.temp.dll.dll Syntax public static class Alphabet Methods GetNextLetter(Char, Alphabet.CaseType) Declaration public static char GetNextLetter(char letter, Alphabet.CaseType type = Alphabet.CaseType.Upper) Parameters Type Name Description Char letter Alphabet.CaseType type Returns Type Description Char GetPreviousLetter(Char, Alphabet.CaseType) Declaration public static char GetPreviousLetter(char letter, Alphabet.CaseType type = Alphabet.CaseType.Upper) Parameters Type Name Description Char letter Alphabet.CaseType type Returns Type Description Char"
  },
  "api/DotNetHelper_Contracts.Helpers.LinqToSQL.Generator.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.LinqToSQL.Generator.html",
    "title": "Class Generator | docfx seed website",
    "keywords": "Class Generator Inheritance Object Generator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Helpers.LinqToSQL Assembly : cs.temp.dll.dll Syntax public class Generator Methods ToSql<T>(Expression<Func<T, Boolean>>) Declaration public static WherePart ToSql<T>(Expression<Func<T, bool>> expression) Parameters Type Name Description Expression < Func <T, Boolean >> expression Returns Type Description WherePart Type Parameters Name Description T WhereSql<T>(Expression<Func<T, Boolean>>) Declaration public static WherePart WhereSql<T>(Expression<Func<T, bool>> expression) Parameters Type Name Description Expression < Func <T, Boolean >> expression Returns Type Description WherePart Type Parameters Name Description T"
  },
  "api/DotNetHelper_Contracts.Tools.UnixCommands.html": {
    "href": "api/DotNetHelper_Contracts.Tools.UnixCommands.html",
    "title": "Class UnixCommands | docfx seed website",
    "keywords": "Class UnixCommands Helper class for common commands Inheritance Object UnixCommands Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Tools Assembly : cs.temp.dll.dll Syntax public static class UnixCommands Methods AbortShutDownOrReboot() returns the hcommand for aborting a shutdown or restart Declaration public static string AbortShutDownOrReboot() Returns Type Description String CopyDirectory(String, String) Copy one directory to another Declaration public static string CopyDirectory(string from, string to) Parameters Type Name Description String from String to Returns Type Description String CreateDirectory(String) returns the command to create the specified directory Declaration public static string CreateDirectory(string path) Parameters Type Name Description String path Returns Type Description String GetAttribute(String) Sets ownership on files and directories Declaration public static string GetAttribute(string fileOrPath) Parameters Type Name Description String fileOrPath Returns Type Description String GetEnvironmentVariables() Declaration public static string GetEnvironmentVariables() Returns Type Description String GetOsVersion() return the command to get the Operating System version Declaration public static string GetOsVersion() Returns Type Description String GetSystemInfo() return command for getting system info Declaration public static string GetSystemInfo() Returns Type Description String GetTaskList() returns the command get the task list Declaration public static string GetTaskList() Returns Type Description String MapDrive(Char, String) returns the command for mapping a drive Declaration public static string MapDrive(char driveLetter, string path) Parameters Type Name Description Char driveLetter String path Returns Type Description String MoveFile(String, String) returns the commands for moving the specified file Declaration public static string MoveFile(string from, string to) Parameters Type Name Description String from String to Returns Type Description String OpenControlPanel() returns the command for opening the control panel Declaration public static string OpenControlPanel() Returns Type Description String OpenServices() returns the command for opening the services Declaration public static string OpenServices() Returns Type Description String Ping(String) returns the command to get ping the specified host Declaration public static string Ping(string host) Parameters Type Name Description String host Returns Type Description String Reboot(Boolean, Nullable<TimeSpan>, String) returns the command for rebooting the host Declaration public static string Reboot(bool force, TimeSpan? delay = default(TimeSpan? ), string message = null) Parameters Type Name Description Boolean force Nullable < TimeSpan > delay String message Returns Type Description String RemoveDirectory(String) Windows has a y/ n prompt.To get the prompt with Unix, use rm - i.The i means \"interactive\". Declaration public static string RemoveDirectory(string directory) Parameters Type Name Description String directory Returns Type Description String Shutdown(Boolean) returns the command for shutting down the host Declaration public static string Shutdown(bool force) Parameters Type Name Description Boolean force Returns Type Description String TailFile(String, Int32) returns command for tailing the specified files Declaration public static string TailFile(string fullFilePath, int outputLastLine = 10) Parameters Type Name Description String fullFilePath Int32 outputLastLine Returns Type Description String UnMapDrive(Char) returns the command for un-mapping a drive Declaration public static string UnMapDrive(char driveLetter) Parameters Type Name Description Char driveLetter Returns Type Description String"
  },
  "api/DotNetHelper_Contracts.Extension.ExtDateTime.html": {
    "href": "api/DotNetHelper_Contracts.Extension.ExtDateTime.html",
    "title": "Class ExtDateTime | docfx seed website",
    "keywords": "Class ExtDateTime Inheritance Object ExtDateTime Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Extension Assembly : cs.temp.dll.dll Syntax public static class ExtDateTime"
  },
  "api/DotNetHelper_Contracts.Enum.IO.html": {
    "href": "api/DotNetHelper_Contracts.Enum.IO.html",
    "title": "Namespace DotNetHelper_Contracts.Enum.IO | docfx seed website",
    "keywords": "Namespace DotNetHelper_Contracts.Enum.IO Enums AddOrRemoveEnum Enum AddOrRemoveEnum FileOption Enum FileOption FileType IOType"
  },
  "api/DotNetHelper_Contracts.Models.OAuth.html": {
    "href": "api/DotNetHelper_Contracts.Models.OAuth.html",
    "title": "Namespace DotNetHelper_Contracts.Models.OAuth | docfx seed website",
    "keywords": "Namespace DotNetHelper_Contracts.Models.OAuth Classes AuthFacebook AuthGoogle"
  },
  "api/DotNetHelper_Contracts.Helpers.OneOffs.html": {
    "href": "api/DotNetHelper_Contracts.Helpers.OneOffs.html",
    "title": "Namespace DotNetHelper_Contracts.Helpers.OneOffs | docfx seed website",
    "keywords": "Namespace DotNetHelper_Contracts.Helpers.OneOffs Classes Alphabet Enums Alphabet.CaseType"
  },
  "api/DotNetHelper_Contracts.Enum.Encryption.SymmetricProvider.html": {
    "href": "api/DotNetHelper_Contracts.Enum.Encryption.SymmetricProvider.html",
    "title": "Enum SymmetricProvider | docfx seed website",
    "keywords": "Enum SymmetricProvider Specifies the symmetric encryption algorithm. Namespace : DotNetHelper_Contracts.Enum.Encryption Assembly : cs.temp.dll.dll Syntax public enum SymmetricProvider Fields Name Description AES The ARS DES The PreEncryptData Encryption Standard provider supports a 64 bit key only. RC2 The Rivest Cipher 2 provider supports keys ranging from 40 to 128 bits, default is 128 bits. Rijndael The Rijndael (also known as AES) provider supports keys of 128, 192, or 256 bits with a default of 256 bits. TripleDES The TripleDES provider (also known as 3DES) supports keys of 128 or 192 bits with a default of 192 bits."
  },
  "api/DotNetHelper_Contracts.Tools.html": {
    "href": "api/DotNetHelper_Contracts.Tools.html",
    "title": "Namespace DotNetHelper_Contracts.Tools | docfx seed website",
    "keywords": "Namespace DotNetHelper_Contracts.Tools Classes CommandPrompt A command-line helper class that makes it easy to run commands. UnixCommands Helper class for common commands"
  },
  "api/DotNetHelper_Contracts.Models.OAuth.AuthFacebook.html": {
    "href": "api/DotNetHelper_Contracts.Models.OAuth.AuthFacebook.html",
    "title": "Class AuthFacebook | docfx seed website",
    "keywords": "Class AuthFacebook Inheritance Object AuthFacebook Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Models.OAuth Assembly : cs.temp.dll.dll Syntax public class AuthFacebook Properties AccessTokenUrl Declaration public string AccessTokenUrl { get; set; } Property Value Type Description String AuthorizeUrl Declaration public string AuthorizeUrl { get; set; } Property Value Type Description String ClientId Declaration public string ClientId { get; set; } Property Value Type Description String ClientSecret Declaration public string ClientSecret { get; set; } Property Value Type Description String KeystoreService Declaration public string KeystoreService { get; } Property Value Type Description String RedirectUrl Declaration public string RedirectUrl { get; set; } Property Value Type Description String Scope Declaration public string Scope { get; set; } Property Value Type Description String Type Declaration public string Type { get; set; } Property Value Type Description String UserInfoUrl Declaration public string UserInfoUrl { get; set; } Property Value Type Description String"
  },
  "api/DotNetHelper_Contracts.Enum.SerializableType.html": {
    "href": "api/DotNetHelper_Contracts.Enum.SerializableType.html",
    "title": "Enum SerializableType | docfx seed website",
    "keywords": "Enum SerializableType Namespace : DotNetHelper_Contracts.Enum Assembly : cs.temp.dll.dll Syntax public enum SerializableType Fields Name Description CSV JSON NONE XML"
  },
  "api/DotNetHelper_Contracts.Enum.DataSource.DataBaseType.html": {
    "href": "api/DotNetHelper_Contracts.Enum.DataSource.DataBaseType.html",
    "title": "Enum DataBaseType | docfx seed website",
    "keywords": "Enum DataBaseType Namespace : DotNetHelper_Contracts.Enum.DataSource Assembly : cs.temp.dll.dll Syntax public enum DataBaseType Fields Name Description Access95 MySql Odbc Oledb Oracle Sqlite SqlServer"
  },
  "api/DotNetHelper_Contracts.Extension.html": {
    "href": "api/DotNetHelper_Contracts.Extension.html",
    "title": "Namespace DotNetHelper_Contracts.Extension | docfx seed website",
    "keywords": "Namespace DotNetHelper_Contracts.Extension Classes ExtCollection ExtDateTime ExtDictionary ExtIEnumerable ExtList ExtMemberInfo ExtObject ExtProgress ExtStack ExtStream ExtString ExtStringBuilder ProgressStream ReflectionExtensions Extensions to help with reflection. TimeSpanExtension"
  },
  "api/DotNetHelper_Contracts.Extension.ExtIEnumerable.html": {
    "href": "api/DotNetHelper_Contracts.Extension.ExtIEnumerable.html",
    "title": "Class ExtIEnumerable | docfx seed website",
    "keywords": "Class ExtIEnumerable Inheritance Object ExtIEnumerable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Extension Assembly : cs.temp.dll.dll Syntax public static class ExtIEnumerable Methods ContainAnySameItem(IEnumerable<String>, IEnumerable<String>) Declaration public static bool ContainAnySameItem(this IEnumerable<string> a, IEnumerable<string> b) Parameters Type Name Description IEnumerable < String > a IEnumerable < String > b Returns Type Description Boolean IsNullOrEmpty(IEnumerable) Method Name Pretty Much Says It All Declaration public static bool IsNullOrEmpty(this IEnumerable source) Parameters Type Name Description IEnumerable source Returns Type Description Boolean"
  },
  "api/DotNetHelper_Contracts.Enum.Encryption.html": {
    "href": "api/DotNetHelper_Contracts.Enum.Encryption.html",
    "title": "Namespace DotNetHelper_Contracts.Enum.Encryption | docfx seed website",
    "keywords": "Namespace DotNetHelper_Contracts.Enum.Encryption Enums SymmetricProvider Specifies the symmetric encryption algorithm."
  },
  "api/DotNetHelper_Contracts.CustomException.BadCodeException.html": {
    "href": "api/DotNetHelper_Contracts.CustomException.BadCodeException.html",
    "title": "Class BadCodeException | docfx seed website",
    "keywords": "Class BadCodeException Custom Exception that lets the user know a code change is required to fix this error Inheritance Object Exception BadCodeException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.CustomException Assembly : cs.temp.dll.dll Syntax [Serializable] public class BadCodeException : Exception, ISerializable, _Exception Constructors BadCodeException() Just create the exception Declaration public BadCodeException() BadCodeException(SerializationInfo, StreamingContext) Create the exception from serialized data. Usual scenario is when exception is occured somewhere on the remote workstation and we have to re-create/re-throw the exception on the local machine Declaration protected BadCodeException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info Serialization info StreamingContext context Serialization context BadCodeException(String) Create the exception with description Declaration public BadCodeException(string message) Parameters Type Name Description String message Exception description BadCodeException(String, Exception) Create the exception with description and inner cause Declaration public BadCodeException(string message, Exception innerException) Parameters Type Name Description String message Exception description Exception innerException Exception inner cause Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/DotNetHelper_Contracts.Extension.ExtCollection.html": {
    "href": "api/DotNetHelper_Contracts.Extension.ExtCollection.html",
    "title": "Class ExtCollection | docfx seed website",
    "keywords": "Class ExtCollection Inheritance Object ExtCollection Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Extension Assembly : cs.temp.dll.dll Syntax public static class ExtCollection Methods AddRange<T>(ICollection<T>, ICollection<T>) Declaration public static void AddRange<T>(this ICollection<T> collection, ICollection<T> collectionToAdd) Parameters Type Name Description ICollection <T> collection ICollection <T> collectionToAdd Type Parameters Name Description T AddRange<T>(IDataParameterCollection, IEnumerable<T>) Declaration public static void AddRange<T>(this IDataParameterCollection collection, IEnumerable<T> collectionToAdd) Parameters Type Name Description IDataParameterCollection collection IEnumerable <T> collectionToAdd Type Parameters Name Description T ForEach<T>(ICollection<T>, Action<T>) Declaration public static ICollection<T> ForEach<T>(this ICollection<T> collection, Action<T> action) Parameters Type Name Description ICollection <T> collection Action <T> action Returns Type Description ICollection <T> Type Parameters Name Description T IsNullOrEmpty(ICollection) Declaration public static bool IsNullOrEmpty(this ICollection source) Parameters Type Name Description ICollection source Returns Type Description Boolean ParamToSql(IDataParameterCollection, String) Declaration public static string ParamToSql(this IDataParameterCollection list, string query) Parameters Type Name Description IDataParameterCollection list String query Returns Type Description String RemoveRange<T>(ICollection<T>, ICollection<T>) Declaration public static void RemoveRange<T>(this ICollection<T> collection, ICollection<T> collectionToRemove) Parameters Type Name Description ICollection <T> collection ICollection <T> collectionToRemove Type Parameters Name Description T"
  },
  "api/DotNetHelper_Contracts.Attribute.html": {
    "href": "api/DotNetHelper_Contracts.Attribute.html",
    "title": "Namespace DotNetHelper_Contracts.Attribute | docfx seed website",
    "keywords": "Namespace DotNetHelper_Contracts.Attribute Classes DataValidationAttribute Class DataValidationAttribute. Enums DataValidationAttributeMembers Enum DataValidationAttributeMembers"
  },
  "README.html": {
    "href": "README.html",
    "title": "DotNetHelper-Contracts | docfx seed website",
    "keywords": "DotNetHelper-Contracts A base common library that contains interfaces,enums,helper methods used across other DotNetHelper Libraries Created Using DotNet-Starter-Template"
  },
  "LICENSE.html": {
    "href": "LICENSE.html",
    "title": "| docfx seed website",
    "keywords": "MIT License Copyright (c) 2019 Joseph McNeal Jr Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "RELEASENOTES.html": {
    "href": "RELEASENOTES.html",
    "title": "| docfx seed website",
    "keywords": "#2 - remove docs folder from git ignore contributed by Joseph McNeal Jr ( TheMofaDe ) #1 - Build contributed by Joseph McNeal Jr ( TheMofaDe ) Commits: c7e6a90b52...11db9649e2"
  }
}